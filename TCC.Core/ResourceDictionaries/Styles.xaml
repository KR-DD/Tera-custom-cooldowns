<ResourceDictionary x:Class="TCC.ResourceDictionaries.Styles"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:extensions="clr-namespace:Nostrum.WPF.Extensions;assembly=Nostrum.WPF"
                    xmlns:controls="clr-namespace:Nostrum.WPF.Controls;assembly=Nostrum.WPF"
                    xmlns:tccControls="clr-namespace:TCC.UI.Controls"
                    xmlns:settings="clr-namespace:TCC.UI.Controls.Settings"
                    mc:Ignorable="d">

    <Style TargetType="{x:Type Path}" BasedOn="{StaticResource NostrumDefaultPathStyle}"/>
    <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource DefaultListBoxStyle}"/>
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource NostrumMainCheckBoxStyle}"/>

    <Style x:Key="BaseSkillArcStyle" TargetType="controls:Arc">
        <Setter Property="EndAngle" Value="0.01" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="RenderTransformOrigin" Value=".5 .5" />
        <Setter Property="UseLayoutRounding" Value="False" />
    </Style>
    <Style x:Key="RoundSkillArcStyle" BasedOn="{StaticResource BaseSkillArcStyle}" TargetType="controls:Arc">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="StrokeThickness" Value="26" />
        <Setter Property="Margin" Value="2" />
    </Style>
    <Style x:Key="SquareSkillArcStyle" BasedOn="{StaticResource BaseSkillArcStyle}" TargetType="controls:Arc">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="80" />
        <Setter Property="StrokeThickness" Value="40" />
        <Setter Property="Margin" Value="-20" />
    </Style>
    <Style x:Key="RhombSkillArcStyle" BasedOn="{StaticResource SquareSkillArcStyle}" TargetType="controls:Arc">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform Angle="-45" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SkillResetShapeStyle" TargetType="Shape">
        <Setter Property="StrokeThickness" Value="0" />
        <Setter Property="Stroke" Value="White" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0" BlurRadius="20" Color="White" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SkillDeleteButtonStyle" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="ToolTip" Value="Remove" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Width="20" Height="20">
                        <Ellipse Fill="{StaticResource HpBrush}"
                                 Effect="{StaticResource DropShadow}" />
                        <Path Data="{StaticResource SvgClose}"
                              Fill="White" Stretch="Uniform" Margin="5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CooldownSecondsTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#dfff" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontFamily" Value="{StaticResource Frutiger}" />
        <Setter Property="Margin" Value="4 0" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="NotificationTitle">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="4 2" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="#4fff" />
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="NotificationBody">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="12 10" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="#fff" />
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="NotificationVersion">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="10 2 10 4" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="#3fff" />
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="NotificationTimestamp" BasedOn="{StaticResource NotificationVersion}">
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
    <Style TargetType="{x:Type Rectangle}" x:Key="NotificationRectangle">
        <Setter Property="Fill" Value="{StaticResource TccNormalGradientBrush}" />
        <Setter Property="Opacity" Value=".1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>

    <Style TargetType="{x:Type Window}" x:Key="BaseWindowStyle">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="Topmost" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="WindowStyle" Value="None" />
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="DefaultBorderStyle">
        <Setter Property="Background" Value="#d223" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#8555" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Effect" Value="{StaticResource DropShadow}" />
        <Setter Property="Opacity" Value=".85" />
    </Style>
    <Style TargetType="{x:Type Border}" x:Key="RevampBorderStyle">
        <Setter Property="Background" Value="{StaticResource RevampBackgroundBrush}" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource RevampBorderBrush}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Effect" Value="{StaticResource DropShadow}" />
        <Setter Property="Opacity" Value=".95" />
    </Style>
    <Style TargetType="{x:Type Border}" x:Key="BoundaryBorderStyle">
        <Setter Property="Background" Value="#05ffffff" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="BorderBrush" Value="#4fff" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="DefaultTextStyle">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Foreground" Value="#ccffffff" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SettingsButton" BasedOn="{StaticResource NostrumMainButtonStyle}">
        <Setter Property="Margin" Value="35 5 7 5" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Effect" Value="{StaticResource DropShadow}" />
        <Setter Property="Background" Value="{StaticResource DefensiveStanceBrush}" />
        <Setter Property="extensions:ButtonExtensions.CornerRadius" Value="12" />
        <Setter Property="Foreground" Value="#d000" />
        <Setter Property="Padding" Value="0 5" />
        <Setter Property="FontWeight" Value="DemiBold" />
    </Style>

    <Style TargetType="{x:Type tccControls:WindowButtons}">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Opacity" Value="0" />
    </Style>

    <Style TargetType="{x:Type Thumb}" x:Key="ScrollThumbs">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto"
                                   Height="Auto" Fill="Transparent" />
                        <Border x:Name="border" CornerRadius="3" HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0"
                                Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="border" Property="Width" Value="Auto" />
                            <Setter TargetName="border" Property="Height" Value="6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}" x:Key="ReversedScrollBar">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="#777" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="Auto" />
        <!--<Setter Property="Margin" Value="0 5 4 5"/>-->
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="5" Background="{TemplateBinding Background}" Margin="0 5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.0001*" />
                        </Grid.RowDefinitions>
                        <Border Background="#3fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="1" />
                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="False" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}"
                                       Style="{StaticResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0"
                                              Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0"
                                              Focusable="false" />
                            </Track.DecreaseRepeatButton>
                            <Track.LayoutTransform>
                                <RotateTransform Angle="0" />
                            </Track.LayoutTransform>
                        </Track>
                        <Grid.LayoutTransform>
                            <RotateTransform Angle="0" />
                        </Grid.LayoutTransform>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="5" />
                            <Setter Property="Margin" Value="5 0" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollBar}" x:Key="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="#777" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="Auto" />
        <!--<Setter Property="Margin" Value="0 5 4 5"/>-->
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="5" Background="{TemplateBinding Background}" Margin="0 5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.0001*" />
                        </Grid.RowDefinitions>
                        <Border Background="#3fff" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="1" />
                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="True" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}"
                                       Style="{StaticResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0"
                                              Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0"
                                              Focusable="false" />
                            </Track.DecreaseRepeatButton>
                            <Track.LayoutTransform>
                                <RotateTransform Angle="0" />
                            </Track.LayoutTransform>
                        </Track>
                        <Grid.LayoutTransform>
                            <RotateTransform Angle="0" />
                        </Grid.LayoutTransform>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="5" />
                            <Setter Property="Margin" Value="5 0" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" BorderThickness="0" Background="Transparent"
                                HorizontalAlignment="Stretch">
                            <ScrollContentPresenter HorizontalAlignment="Stretch"
                                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Grid.Row="0" Grid.Column="1" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollViewer}" x:Key="ScrollViewerWithReversedVerticalScrollBar">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" BorderThickness="0" Background="Transparent"
                                HorizontalAlignment="Stretch">
                            <ScrollContentPresenter HorizontalAlignment="Stretch"
                                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Style="{StaticResource ReversedScrollBar}"
                                   Grid.Row="0" Grid.Column="1" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabControl}" x:Key="ChatTabControlStyle">
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource SelectionBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource SelectionBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true"
                          KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel" Background="#1000" Grid.Column="0" IsItemsHost="true"
                                  Margin="0,0,0,0" Grid.Row="0"
                                  KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" HorizontalAlignment="Stretch" />
                        <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1"
                                KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1" />
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1" />
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot"
                                    Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{StaticResource TooltipBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="#9fff" />
        <Setter Property="Padding" Value="16 6" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Effect" Value="{StaticResource DropShadow}" />
        <EventSetter Event="Opened" Handler="ToolTip_Opened" />
        <EventSetter Event="Closed" Handler="ToolTip_Closed" />
    </Style>

    <Style TargetType="{x:Type Grid}" x:Key="GlowHoverGrid">
        <Style.Setters>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush Opacity="0">
                        <GradientStop Color="#0ddf" />
                        <GradientStop Color="#1ddf" Offset=".3" />
                        <GradientStop Color="#1ddf" Offset=".7" />
                        <GradientStop Color="#0ddf" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="0" To="1"
                                             Storyboard.TargetProperty="(Grid.Background).(Brush.Opacity)"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="1" To="0"
                                             Storyboard.TargetProperty="(Grid.Background).(Brush.Opacity)"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Grid}" x:Key="GlowHoverGridLeft">
        <Style.Setters>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush Opacity="0">
                        <GradientStop Color="#0ddf" />
                        <GradientStop Color="#2ddf" Offset="0.2" />
                        <!--<GradientStop Color="#1ddf" Offset="0.6" />-->
                        <GradientStop Color="#0ddf" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="0" To="1"
                                             Storyboard.TargetProperty="(Grid.Background).(Brush.Opacity)"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="1" To="0"
                                             Storyboard.TargetProperty="(Grid.Background).(Brush.Opacity)"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="ClassWindowSkillBorder">
        <Setter Property="BorderBrush" Value="#89a" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="51" />
        <Setter Property="Height" Value="51" />
        <Setter Property="RenderTransformOrigin" Value=".5 .5" />
        <Setter Property="Background" Value="{StaticResource RevampBackgroundGradientBrush}" />
        <Setter Property="Effect" Value="{StaticResource ClassWindowSkillBorderShadow}" />
    </Style>

    <Style TargetType="{x:Type settings:CheckboxSetting}">
        <Setter Property="CheckBoxColor" Value="{StaticResource DefensiveStanceBrush}" />
        <Setter Property="Height" Value="35" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(UIElement.IsEnabled), RelativeSource={RelativeSource Self}}"
                         Value="False">
                <Setter Property="Opacity" Value=".3" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type controls:MaterialSwitch}">
        <Setter Property="OnColor" Value="{StaticResource MainColor}" />
        <Setter Property="OffColor" Value="#f222" />
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="WindowLogo" BasedOn="{StaticResource NostrumDefaultPathStyle}">
        <Setter Property="Data" Value="{StaticResource SvgTera}" />
        <Setter Property="Fill" Value="#6fff" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Margin" Value="6" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <!--#region Based on Nostrum -->
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxMainStyle}">
        <Setter Property="extensions:ComboBoxExtensions.DropDownBorderStyle" Value="{StaticResource RevampBorderStyle}" />
    </Style>
    <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource {x:Type ContextMenu}}">
        <Setter Property="Background" Value="{StaticResource RevampDarkerBackgroundBrush}" />
    </Style>
    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="Background" Value="{StaticResource RevampDarkerBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
    </Style>
    <!--#endregion-->

</ResourceDictionary>