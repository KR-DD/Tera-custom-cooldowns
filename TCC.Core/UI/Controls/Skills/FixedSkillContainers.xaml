<UserControl x:Class="TCC.UI.Controls.Skills.FixedSkillContainers"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:skills1="clr-namespace:TCC.Data.Skills"
             xmlns:widgets="clr-namespace:TCC.ViewModels.Widgets"
             xmlns:extensions="clr-namespace:Nostrum.WPF.Extensions;assembly=Nostrum.WPF"
             xmlns:skills="clr-namespace:TCC.UI.Controls.Skills"
             xmlns:converters="clr-namespace:Nostrum.WPF.Converters;assembly=Nostrum.WPF"
             PreviewDragEnter="FixedSkillContainers_OnDragOver"
             MouseEnter="MainSkillsGrid_MouseEnter"
             MouseLeave="MainSkillsGrid_MouseLeave"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance widgets:CooldownWindowViewModel}">
    <UserControl.Resources>
        <dragablz:HorizontalOrganiser x:Key="HorizontalOrganiser" />

        <Style TargetType="ContentPresenter" x:Key="ItemCooldownsItemContainerStyle">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX=".85"
                                    ScaleY=".85" />
                </Setter.Value>
            </Setter>
            <Setter Property="FlowDirection" Value="LeftToRight" />
        </Style>

        <ItemsPanelTemplate x:Key="OtherCooldownPanelTemplate">
            <StackPanel IsItemsHost="True"
                        Width="Auto" Height="Auto"
                        Orientation="Horizontal"
                        HorizontalAlignment="Left" VerticalAlignment="Center" />
        </ItemsPanelTemplate>

        <ItemsPanelTemplate x:Key="ItemCooldownPanelTemplate">
            <StackPanel IsItemsHost="True"
                        Width="Auto" Height="Auto"
                        FlowDirection="RightToLeft"
                        Orientation="Horizontal"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center" />
        </ItemsPanelTemplate>

        <LinearGradientBrush x:Key="TopBorderBackground" EndPoint="0 1">
            <GradientStop Color="#0222" Offset="0" />
            <GradientStop Color="#0222" Offset=".2" />
            <GradientStop Color="#f222" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="BottomBorderBackground" EndPoint="0 1">
            <GradientStop Color="#b222" Offset="0" />
            <GradientStop Color="#1222" Offset=".8" />
            <GradientStop Color="#0222" Offset="1" />
        </LinearGradientBrush>

        <SineEase x:Key="Ease" EasingMode="EaseInOut" />

        <ControlTemplate x:Key="RoundDragableSkill" TargetType="{x:Type dragablz:DragablzItem}">
            <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
            <Grid RenderTransformOrigin=".5 .5" ToolTip="{Binding Skill.ShortName}" Margin="0 0">
                <skills:RoundFixedSkillControl />
                <Rectangle x:Name="Activator"
                           Fill="Transparent"
                           Height="30"
                           HorizontalAlignment="Stretch" VerticalAlignment="Bottom" />
                <Thumb x:Name="Thumb"
                       Visibility="Collapsed"
                       dragablz:DragablzItem.IsCustomThumb="True"
                       Cursor="None"
                       HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Thumb.Template>
                        <ControlTemplate>
                            <Rectangle Width="40" Height="20"
                                       VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                       Cursor="SizeWE"
                                       Fill="Transparent" />
                        </ControlTemplate>
                    </Thumb.Template>

                </Thumb>
                <Grid.RenderTransform>
                    <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                </Grid.RenderTransform>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDragging" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleX">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.12"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleY">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.12"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleX">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleY">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger SourceName="Activator" Property="IsMouseOver" Value="True">
                    <Setter TargetName="Thumb" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True" SourceName="Thumb">
                    <Setter TargetName="Thumb" Property="Visibility" Value="Visible" />
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="SquareDragableSkill" TargetType="{x:Type dragablz:DragablzItem}">
            <Grid RenderTransformOrigin=".5 .5"
                  ToolTip="{Binding Skill.ShortName}"
                  Margin="0"
                  d:DataContext="{d:DesignInstance skills1:Cooldown}">
                <skills:SquareFixedSkillControl />
                <Rectangle Fill="#01000000"
                           x:Name="Activator"
                           Height="30"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Bottom" />
                <Thumb x:Name="Thumb"
                       Visibility="Collapsed"
                       dragablz:DragablzItem.IsCustomThumb="True"
                       Cursor="None"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center">
                    <Thumb.Template>
                        <ControlTemplate>
                            <Rectangle Width="40" Height="20" VerticalAlignment="Center" Cursor="SizeWE"
                                       HorizontalAlignment="Stretch" Fill="Transparent" />
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
                <Grid.RenderTransform>
                    <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                </Grid.RenderTransform>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDragging" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleX">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.12"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleY">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.12"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleX">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                               Storyboard.TargetProperty="ScaleY">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"
                                                          EasingFunction="{StaticResource Ease}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger SourceName="Activator" Property="IsMouseOver" Value="True">
                    <Setter TargetName="Thumb" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True" SourceName="Thumb">
                    <Setter TargetName="Thumb" Property="Visibility" Value="Visible" />
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- ReSharper disable Xaml.RedundantResource -->
        <Style x:Key="DragableSkillStyle" TargetType="dragablz:DragablzItem">
            <Setter Property="Padding" Value="0 4" />
            <Setter Property="Margin" Value="0" />
        </Style>

        <Style x:Key="RoundDragableStyle" TargetType="dragablz:DragablzItem"
               BasedOn="{StaticResource DragableSkillStyle}">
            <Setter Property="Template" Value="{StaticResource RoundDragableSkill}" />
        </Style>

        <Style x:Key="SquareDragableStyle" TargetType="dragablz:DragablzItem"
               BasedOn="{StaticResource DragableSkillStyle}">
            <Setter Property="Template" Value="{StaticResource SquareDragableSkill}" />
        </Style>
        <!-- ReSharper restore Xaml.RedundantResource -->

        <Style x:Key="FixedDragablzItemsControlStyle" TargetType="dragablz:DragablzItemsControl">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource RoundDragableStyle}" />
            <Setter Property="ItemsOrganiser" Value="{StaticResource HorizontalOrganiser}" />
            <Setter Property="dd:DragDrop.DropHandler"
                    Value="{Binding DropHandler, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=skills:FixedSkillContainers}}" />
            <Setter Property="dd:DragDrop.IsDropTarget" Value="True" />
            <Setter Property="dd:DragDrop.ItemsPanelOrientation" Value="Horizontal" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="dragablz:DragablzItemsControl">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}" />
                            <ItemsPresenter />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid Margin="10 4" HorizontalAlignment="Left" x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Rectangle Fill="Black" RadiusX="20" RadiusY="20"
                   Margin="0 0" Opacity=".3" Grid.Row="1">
            <Shape.Effect>
                <BlurEffect Radius="20" RenderingBias="Performance"/>
            </Shape.Effect>
        </Rectangle>
        <!--Main DefaultBorderStyle-->
        <Grid Grid.Row="1" Grid.RowSpan="2"
              HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.CacheMode>
                <BitmapCache RenderAtScale="2" />
            </Grid.CacheMode>
            <Grid.OpacityMask>
                <LinearGradientBrush EndPoint="1 0">
                    <GradientStop Offset="0.0" />
                    <GradientStop Color="White" Offset=".2" />
                    <GradientStop Color="White" Offset=".8" />
                    <GradientStop Offset="1.0" />
                </LinearGradientBrush>
            </Grid.OpacityMask>

            <Border Margin="-4 -2 0 0" CornerRadius="0"
                    BorderThickness="0"
                    VerticalAlignment="Top"
                    Height="45"
                    Background="{StaticResource BottomBorderBackground}"
                    Grid.Row="1" Effect="{x:Null}"
                    x:Name="MainBorderSec" HorizontalAlignment="Stretch" />
            <Border x:Name="MainBorder"
                    Margin="-4 0 0 2"
                    BorderBrush="#555"
                    BorderThickness="0 0 0 1"
                    Background="{StaticResource TopBorderBackground}"
                    Effect="{x:Null}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    UseLayoutRounding="True" />
        </Grid>
        <Button x:Name="SettingsButton"
                Opacity="0"
                HorizontalAlignment="Left" VerticalAlignment="Bottom"
                Height="20"
                Margin="-4 0 0 5" Padding="2"
                BorderThickness="1"
                extensions:ButtonExtensions.CornerRadius="1"
                Style="{StaticResource ButtonMainStyle}"
                BorderBrush="{StaticResource RevampBorderBrush}"
                Background="{StaticResource RevampBackgroundBrush}"
                Click="OpenCooldownSettings"
                ToolTip="Configure skills">
            <Path Data="{StaticResource SvgSettings}" />
        </Button>
        <!--Main skills grid-->
        <Grid x:Name="MainSkillsGrid"
              Grid.Row="1"
              Margin="-2 0 -2 2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <dragablz:DragablzItemsControl Name="MainSkills"
                                           ItemsSource="{Binding MainSkills}"
                                           MinWidth="59" MinHeight="59"
                                           Drop="MainSkills_OnDrop">
                <dragablz:DragablzItemsControl.Style>
                    <Style BasedOn="{StaticResource FixedDragablzItemsControlStyle}"
                           TargetType="dragablz:DragablzItemsControl">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDragging}" Value="True">
                                <Setter Property="Background"
                                        Value="{Binding Source={StaticResource TankRoleBrush}, Converter={converters:ColorToTransparent Opacity=.2}}" />
                                <Setter Property="BorderBrush" Value="{StaticResource TankRoleBrush}" />
                                <Setter Property="Margin" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </dragablz:DragablzItemsControl.Style>
                <dragablz:DragablzItemsControl.PositionMonitor>
                    <dragablz:HorizontalPositionMonitor OrderChanged="MainSkillOrderChanged" />
                </dragablz:DragablzItemsControl.PositionMonitor>
            </dragablz:DragablzItemsControl>
        </Grid>

        <!--Secondary + other skills grid-->
        <Grid x:Name="SecSkillsGrid"
              Grid.Row="2"
              Margin="-2 3 -2 0"
              Width="Auto"
              HorizontalAlignment="Left" VerticalAlignment="Stretch"
              UseLayoutRounding="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle Fill="Black" RadiusX="20" RadiusY="20"
                       Margin="0 0" Opacity=".3">
                <Shape.Effect>
                    <BlurEffect Radius="20" RenderingBias="Performance"/>
                </Shape.Effect>
            </Rectangle>

            <!--Secondary skills-->
            <dragablz:DragablzItemsControl Name="SecSkills"
                                           MinHeight="59"
                                           ItemsSource="{Binding SecondarySkills}"
                                           Drop="FixedSkillContainers_OnDragLeave">
                <dragablz:DragablzItemsControl.Style>
                    <Style BasedOn="{StaticResource FixedDragablzItemsControlStyle}"
                           TargetType="dragablz:DragablzItemsControl">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDragging}" Value="True">
                                <Setter Property="Background"
                                        Value="{Binding Source={StaticResource GoldBrush}, Converter={converters:ColorToTransparent Opacity=.2}}" />
                                <Setter Property="BorderBrush" Value="{StaticResource GoldBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </dragablz:DragablzItemsControl.Style>

                <dragablz:DragablzItemsControl.PositionMonitor>
                    <dragablz:HorizontalPositionMonitor OrderChanged="SecondarySkillOrderChanged" />
                </dragablz:DragablzItemsControl.PositionMonitor>
            </dragablz:DragablzItemsControl>

            <!--Other skills-->
            <ItemsControl Name="OtherSkills"
                          Grid.Column="2"
                          Width="Auto"
                          VerticalAlignment="Top" HorizontalAlignment="Left"
                          ItemsSource="{Binding OtherSkills}"
                          ItemTemplateSelector="{StaticResource NormalSkillTemplateSelector}"
                          ItemsPanel="{StaticResource OtherCooldownPanelTemplate}" />
        </Grid>
        <!--Item skills grid-->
        <Grid UseLayoutRounding="True">
            <ItemsControl Name="ItemSkills"
                          ItemTemplateSelector="{StaticResource NormalSkillTemplateSelector}"
                          ItemContainerStyle="{StaticResource ItemCooldownsItemContainerStyle}"
                          ItemsPanel="{StaticResource ItemCooldownPanelTemplate}"
                          Width="Auto" Height="50"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Right"
                          ItemsSource="{Binding ItemSkills}"
                          Visibility="{Binding ShowItems, Converter={converters:BoolToVisibility Mode=Hidden}}" />
        </Grid>
    </Grid>
</UserControl>