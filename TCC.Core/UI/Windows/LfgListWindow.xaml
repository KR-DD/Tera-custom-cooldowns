<windows:TccWindow x:Class="TCC.UI.Windows.LfgListWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:extensions="clr-namespace:Nostrum.WPF.Extensions;assembly=Nostrum.WPF"
                   xmlns:windows="clr-namespace:TCC.UI.Windows"
                   xmlns:vm="clr-namespace:TCC.ViewModels"
                   xmlns:converters="clr-namespace:Nostrum.WPF.Converters;assembly=Nostrum.WPF"
                   UseLayoutRounding="True"
                   Style="{StaticResource BaseWindowStyle}"
                   mc:Ignorable="d" d:DataContext="{d:DesignInstance {x:Type vm:LfgListViewModel}}"
                   Title="TCC LFG" Height="810" Width="622"
                   WindowStartupLocation="Manual">
    <Grid Margin="5">
        <Border Background="{StaticResource RevampBackgroundBrush}"
                CornerRadius="1" Effect="{StaticResource DropShadow}"
                BorderThickness="1" BorderBrush="{StaticResource TccNormalGradientBrush}"
                Margin="6" Width="600" HorizontalAlignment="Stretch" Opacity=".75" />
        <Grid HorizontalAlignment="Stretch" Margin="6" MouseLeftButtonDown="OnBgMouseLeftButtonDown">
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border Effect="{StaticResource DropShadow}"
                    Grid.RowSpan="2"
                    Grid.Row="1"
                    Background="{StaticResource RevampDarkerBackgroundBrush}"
                    BorderThickness="1"
                    Opacity=".5"
                    Margin="4  21 4 4"
                    BorderBrush="{StaticResource RevampBorderBrush}"
                    HorizontalAlignment="Stretch" />

            <!--Title-->
            <Border Width="40" Height="40" Style="{StaticResource RevampBorderStyle}"
                    BorderBrush="{StaticResource TccNormalGradientBrush}"
                    RenderTransformOrigin=".5 .5"
                    HorizontalAlignment="Left" Margin="-20">
                <Grid>
                    <Rectangle Margin="5" Fill="#2fff" />
                    <Rectangle Opacity=".2" Fill="{StaticResource TccNormalGradientBrush}"/>
                    <Path Width="30" Height="30" Fill="White" Data="{StaticResource SvgUsers}"
                              Margin="0" VerticalAlignment="Center" RenderTransformOrigin=".5 .5">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform X="0" Y="-2" />
                                <RotateTransform Angle="-45" />

                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                </Grid>

                <Border.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="45" />
                        <TranslateTransform X="20" Y="-3" />
                    </TransformGroup>
                </Border.RenderTransform>
            </Border>

            <TextBlock VerticalAlignment="Center" Opacity=".8" FontSize="24"
                       FontWeight="Thin" IsHitTestVisible="False" Foreground="#eee" Grid.Row="0" 
                       Margin="55 -8 0 0">
                <Run Text="Looking for group " />
                <Run Text="{Binding ListingsView.(CollectionView.Count), Mode=OneWay}" Foreground="#5fff"
                     FontWeight="Normal" FontSize="20" 
                /><Run Text="/"  FontWeight="Normal" FontSize="20" Foreground="#3fff"
                /><Run Text="{Binding ActualListingsAmount, Mode=OneWay}" FontWeight="Normal" FontSize="20" Foreground="#3fff"/>
            </TextBlock>
            <Rectangle MouseLeftButtonDown="Drag" Fill="Transparent" />
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button HorizontalAlignment="Right"
                        VerticalAlignment="Stretch"
                        Visibility="{Binding IsAutoPublicizeRunning, Converter={converters:BoolToVisibility}}"
                        Command="{Binding ToggleAutoPublicizeCommand}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonMainStyle}">
                            <Setter Property="ToolTip" Value="Auto-publicize running. Click to disable." />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAutoPublicizeEnabled}" Value="False">
                                    <Setter Property="ToolTip"
                                            Value="Disabling after cooldown ends. Click to keep enabled." />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Path Data="{StaticResource SvgAuto}" RenderTransformOrigin=".5 .5" Stretch="Uniform" Fill="#fff"
                          Margin="12 17">
                        <Path.Style>
                            <Style TargetType="Path" BasedOn="{StaticResource {x:Type Path}}">
                                <Setter Property="RenderTransform"
                                        Value="{StaticResource DefaultRotateTransform}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAutoPublicizeRunning}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard x:Name="AutoSpin">
                                                <Storyboard RepeatBehavior="Forever"
                                                            Timeline.DesiredFrameRate="15">
                                                    <DoubleAnimation
                                                        Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                        From="0" To="359.9"
                                                        Duration="0:0:2" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <StopStoryboard BeginStoryboardName="AutoSpin" />
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsAutoPublicizeEnabled}" Value="False">
                                        <Setter Property="Opacity" Value=".3" />
                                        <Setter Property="ToolTip"
                                                Value="Disabling after cooldown ends. Click to re-enable." />
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                </Button>
                <Button Style="{StaticResource ButtonContentOpacityStyle}" HorizontalAlignment="Right"
                        VerticalAlignment="Stretch" x:Name="CreateBtn"
                        ToolTip="Create new LFG message."
                        Command="{Binding CreateMessageCommand}">
                    <Path Data="{StaticResource SvgAdd}" Stretch="Uniform" Fill="#fff" Margin="12 17" />
                </Button>
                <Button Style="{StaticResource ButtonContentOpacityStyle}" HorizontalAlignment="Right"
                        VerticalAlignment="Stretch" x:Name="RefreshBtn"
                        ToolTip="Refresh LFG list (same as pressing LFG hotkey)"
                        Command="{Binding ReloadCommand}">
                    <Path Data="{StaticResource SvgReload}" Stretch="Uniform" Fill="#fff" Margin="12 17" />
                </Button>
                <Rectangle Margin="0 8 0 8" Fill="#1fff" Width="1" VerticalAlignment="Stretch" />
                <Button Style="{StaticResource ButtonContentOpacityStyle}" HorizontalAlignment="Right"
                        VerticalAlignment="Stretch" x:Name="ActionsBtn"
                        ToolTip="More actions..."
                        Command="{Binding OpenPopupCommand}">
                    <Path Data="{StaticResource SvgDotsVertical}" Stretch="Uniform" Fill="#fff" Margin="12 17" />
                </Button>
                <Rectangle Margin="0 8 0 8" Fill="#1fff" Width="1" VerticalAlignment="Stretch" />
                <Popup PlacementTarget="{Binding ElementName=ActionsBtn}"
                       IsOpen="{Binding IsPopupOpen}"
                       PopupAnimation="Slide"
                       AllowsTransparency="True"
                       MouseLeave="LfgPopup_OnMouseLeave"
                       Placement="Relative"
                       HorizontalOffset="-5"
                       VerticalOffset="5"
                       x:Name="ActionsPopup">
                    <Grid Margin="10">
                        <Border Style="{StaticResource RevampBorderStyle}"
                                Background="{StaticResource RevampDarkerBackgroundBrush}">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="15" Opacity=".4" Direction="-90" />
                            </Border.Effect>
                        </Border>
                        <StackPanel>
                            <StackPanel.Resources>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonMainStyle}">
                                    <Setter Property="Padding" Value="10 5" />
                                    <Setter Property="Height" Value="36" />
                                </Style>
                                <Style TargetType="{x:Type Path}" BasedOn="{StaticResource {x:Type Path}}">
                                    <Setter Property="Width" Value="16" />
                                    <Setter Property="Height" Value="16" />
                                    <Setter Property="Margin" Value="0 5 10 5" />
                                </Style>
                            </StackPanel.Resources>
                            <Button x:Name="CollapseAllButton"
                                    extensions:ButtonExtensions.CornerRadius="3"
                                    Command="{Binding CollapseAllCommand}"
                                    ToolTip="Collapse any expanded LFG">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Path Data="{StaticResource SvgCollapseAll}" />
                                    <TextBlock Text="Collapse all" Grid.Column="1"
                                               VerticalAlignment="Center" />
                                </Grid>
                            </Button>
                            <Button x:Name="AutoPublicizeButton"
                                    ToolTip="Enable auto-publicize of LFG message with a configurable cooldown."
                                    Command="{Binding ToggleAutoPublicizeCommand}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <CheckBox Width="16" Height="16" Margin="0 5 10 5"
                                              IsChecked="{Binding IsAutoPublicizeRunning, Mode=OneWay}" />
                                    <TextBlock Text="Auto publicize" Grid.Column="1"
                                               VerticalAlignment="Center"
                                               Foreground="White" />
                                </Grid>
                            </Button>
                            <Grid Height="36" IsEnabled="{Binding IsAutoPublicizeRunning, Converter={converters:BooleanInverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="36" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding AutoPublicizeCooldown, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                         Foreground="White" Background="#0fff" Width="20"
                                         PreviewMouseLeftButtonDown="OnTbMouseLeftButtonDown"
                                         LostKeyboardFocus="OnTbLostKeyboardFocus"
                                         TextAlignment="Center"
                                         KeyDown="OnTbKeyDown"
                                         MouseLeave="OnTbMouseLeave"
                                         CaretBrush="#9fff"
                                         Grid.Column="1"
                                         VerticalAlignment="Center" BorderThickness="0 0 0 1" />
                                <TextBlock Text="cooldown (sec)" Grid.Column="2" Foreground="White"
                                           VerticalAlignment="Center" />

                            </Grid>

                            <Rectangle Margin="10 0" Fill="#1fff" Height="1" VerticalAlignment="Stretch" />
                            <Grid Height="36">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="36" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding MinLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         Foreground="White" Background="#0fff" Width="20"
                                         PreviewMouseLeftButtonDown="OnTbMouseLeftButtonDown"
                                         LostKeyboardFocus="OnTbLostKeyboardFocus"
                                         TextAlignment="Center"
                                         KeyDown="OnTbKeyDown"
                                         MouseLeave="OnTbMouseLeave"
                                         CaretBrush="#9fff"
                                         VerticalAlignment="Center" BorderThickness="0 0 0 1" />
                                <TextBlock Text="Min level" Grid.Column="1" Foreground="White"
                                           VerticalAlignment="Center" />

                            </Grid>
                            <Grid Height="36">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="36" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding MaxLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         Foreground="White"
                                         Background="#0fff" Width="20"
                                         PreviewMouseLeftButtonDown="OnTbMouseLeftButtonDown"
                                         LostKeyboardFocus="OnTbLostKeyboardFocus"
                                         TextAlignment="Center"
                                         CaretBrush="#9fff"
                                         KeyDown="OnTbKeyDown"
                                         MouseLeave="OnTbMouseLeave"
                                         VerticalAlignment="Center" BorderThickness="0 0 0 1" />
                                <TextBlock Text="Max level" Grid.Column="1" Foreground="White"
                                           VerticalAlignment="Center" />

                            </Grid>
                            <Rectangle Margin="10 0" Fill="#1fff" Height="1" VerticalAlignment="Stretch" />
                            <Button x:Name="ShowTradeListingsButton"
                                    ToolTip="Enable auto-publicize of LFG message with a 20 seconds cooldown."
                                    Command="{Binding ToggleShowTradeListingsCommand}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <CheckBox Width="16" Height="16" Margin="0 5 10 5"
                                              IsChecked="{Binding HideTradeListings, Mode=OneWay}" />
                                    <TextBlock Text="Hide trade listings" Grid.Column="1"
                                               VerticalAlignment="Center"
                                               Foreground="White" />
                                </Grid>
                            </Button>
                            <Button x:Name="ConfigBlacklistButton"
                                extensions:ButtonExtensions.CornerRadius="3"
                                Command="{Binding ConfigureBlacklistCommand}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Path Data="{StaticResource SvgSettings}" />
                                    <TextBlock Text="Configure filter" Grid.Column="1"
                                           VerticalAlignment="Center" />
                                </Grid>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Popup>
                <Button Style="{StaticResource ButtonContentOpacityStyle}" HorizontalAlignment="Right"
                        VerticalAlignment="Stretch" 
                        Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windows:LfgListWindow}, Path=HideWindowCommand}">
                    <Path Data="{StaticResource SvgClose}" Stretch="Uniform" Fill="#fff" Margin="12 17" />
                </Button>
            </StackPanel>
            <!--Header-->
            <Grid Grid.Row="1" VerticalAlignment="Stretch" Margin="0 0 5 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="260" />
                    <ColumnDefinition Width="70" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="19" />
                </Grid.ColumnDefinitions>
                <Button Command="{Binding SortCommand}" CommandParameter="Message" Padding="5 3 5 3"
                        Style="{StaticResource ButtonMainStyle}" HorizontalAlignment="Stretch" Grid.Column="0"
                        Grid.ColumnSpan="2" Margin="5 0 0 -5" Foreground="#faaa" HorizontalContentAlignment="Left">
                    Message
                </Button>
                <Button Command="{Binding SortCommand}" CommandParameter="AliveSinceMs" Padding="5 3 5 3"
                        Style="{StaticResource ButtonMainStyle}" HorizontalAlignment="Stretch" Grid.Column="2"
                        Margin="0 0 0 -5" Foreground="#faaa" HorizontalContentAlignment="Right">
                    Time
                </Button>
                <Button Command="{Binding SortCommand}" CommandParameter="LeaderName" Padding="5 3 5 3"
                        Style="{StaticResource ButtonMainStyle}" HorizontalAlignment="Stretch" Grid.Column="3"
                        Margin="0 0 0 -5" Foreground="#faaa" HorizontalContentAlignment="Left">
                    Leader
                </Button>
                <Button Command="{Binding SortCommand}" CommandParameter="PlayerCount" Padding="16 3"
                        Style="{StaticResource ButtonMainStyle}" HorizontalAlignment="Stretch" Grid.Column="4"
                        Margin="0 0 0 -5" Foreground="#faaa" HorizontalContentAlignment="Left">
                    Count
                </Button>
            </Grid>
            <!--Main List-->
            <ListBox Background="Transparent"
                     Padding="-1 -1 -1 -1"
                     Height="600"
                     ScrollViewer.CanContentScroll="False"
                     ScrollViewer.VerticalScrollBarVisibility="Visible"
                     BorderThickness="0"
                     Grid.Row="2"
                     ItemsSource="{Binding ListingsView}"
                     HorizontalAlignment="Stretch"
                     Margin="5 5 5 5"
                     AlternationCount="2"
                     ItemTemplateSelector="{StaticResource ListingTemplateSelector}"
                     x:Name="MainList">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel HorizontalAlignment="Stretch" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Padding" Value="5 0 5 0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Grid Margin="1" Style="{StaticResource GlowHoverGridLeft}">

                                        <Border CornerRadius="1"
                                                Background="{StaticResource RevampBackgroundBrush}" />
                                        <ContentPresenter Margin="{TemplateBinding Padding}" />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ListBox.ItemContainerStyle>

            </ListBox>

            <!--Footer-->
            <!--<Grid Grid.Row="2" VerticalAlignment="Bottom" Margin=" 0 0 0 2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid ClipToBounds="True" Background="{StaticResource RevampBackgroundBrush}" x:Name="NewMessageGrid"
                      Margin="5 0 5 3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox Background="#3000"
                             Visibility="Visible"
                             Height="Auto"
                             VerticalContentAlignment="Center"
                             Foreground="#9fff"
                             FontSize="18"
                             Margin="0 5"
                             BorderThickness="0"
                             MouseLeftButtonDown="OnTbMouseLeftButtonDown"
                             x:Name="NewMessageTextBox"
                             Text="{Binding NewMessage, Mode=TwoWay , UpdateSourceTrigger=PropertyChanged}" />
                    <Grid Grid.Column="1" ClipToBounds="True" Margin="0 5">
                        <settingsCtrl:BoolSetting Margin="-40 -4 -8 -4" SettingName="Raid" HorizontalAlignment="Right"
                                                  VerticalContentAlignment="Center" x:Name="RaidSwitch"
                                                  IsOn="{Binding CreatingRaid, Mode=TwoWay}" />
                    </Grid>
                    <Grid.LayoutTransform>
                        <ScaleTransform ScaleY="0" />
                    </Grid.LayoutTransform>
                </Grid>
                <Button extensions:ButtonExtensions.CornerRadius="3"
                        Grid.Row="2"
                        HorizontalContentAlignment="Center"
                        Width="190"
                        Padding="0 4"
                        Effect="{StaticResource DropShadow}"
                        Command="{Binding CreateMessageCommand}"
                        x:Name="CreateMessageBtn"
                        FontSize="15"
                        FontWeight="Normal"
                        VerticalAlignment="Center"
                        Style="{StaticResource ButtonMainStyle}"
                        Background="{StaticResource ChatMegaphoneBrushDark}"
                        IsHitTestVisible="{Binding AmIinLfg, Converter={StaticResource BoolInverter}}">
                    <Button.Content>
                        <MultiBinding Converter="{StaticResource LfgVmToButtonLabel}">
                            <Binding Path="Creating" />
                            <Binding Path="NewMessage" />
                        </MultiBinding>
                    </Button.Content>
                    <Button.LayoutTransform>
                        <ScaleTransform ScaleY="1" />
                    </Button.LayoutTransform>
                </Button>
                <UniformGrid Grid.Row="2" Rows="1" x:Name="LfgMgmtBtn"
                             IsHitTestVisible="{Binding AmIinLfg}">
                    <Button Style="{StaticResource ButtonMainStyle}" x:Name="RemoveMessageButton"
                            Command="{Binding RemoveMessageCommand}"
                            Margin="5" BorderBrush="{StaticResource HpBrush}"
                            Background="{StaticResource RevampBackgroundBrush}"
                            extensions:ButtonExtensions.BorderEffect="{StaticResource DropShadow}"
                            extensions:ButtonExtensions.CornerRadius="1" FontSize="15" FontWeight="Normal"
                            Content="Remove message" HorizontalContentAlignment="Center" Padding="0 4" />
                    <Button Style="{StaticResource ButtonMainStyle}" x:Name="EditMessageButton"
                            Command="{Binding CreateMessageCommand}"
                            extensions:ButtonExtensions.BorderEffect="{StaticResource DropShadow}"
                            Background="{StaticResource RevampBackgroundBrush}"
                            Margin="5" BorderBrush="{StaticResource  IgnidraxBrush}"
                            extensions:ButtonExtensions.CornerRadius="1" FontSize="15" FontWeight="Normal"
                            Content="Edit message" HorizontalContentAlignment="Center" Padding="0 4" />
                    <Grid Margin="5" x:Name="PublicizeGrid" Effect="{StaticResource DropShadow}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Button Style="{StaticResource ButtonMainStyle}"
                                BorderBrush="{StaticResource GreenBrush}" FontSize="15" FontWeight="Normal"
                                Background="{StaticResource RevampBackgroundBrush}"
                                extensions:ButtonExtensions.CornerRadius="1 0 0 1" Padding="0 4"
                                Content="Publicize" HorizontalContentAlignment="Center"
                                Command="{Binding PublicizeCommand}"
                                IsEnabled="{Binding IsPublicizeEnabled}"
                                IsHitTestVisible="{Binding IsPublicizeEnabled}"
                                x:Name="PublicizeBtn" />
                        <Button Style="{StaticResource ButtonMainStyle}" ToolTip="Auto publicize"
                                BorderBrush="{StaticResource GreenBrush}" FontSize="15" FontWeight="Normal"
                                extensions:ButtonExtensions.CornerRadius="0 1 1 0" Padding="0 4"
                                Background="{StaticResource RevampBackgroundBrush}"
                                Command="{Binding ToggleAutoPublicizeCommand}"
                                IsEnabled="true"
                                IsHitTestVisible="true"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                Grid.Column="1" Margin="0 0 0 0">
                            <Path Data="{StaticResource SvgAuto}"
                                  Fill="#dfff" Height="18" Margin="0"
                                  RenderTransformOrigin=".5 .5">
                                <Path.Style>
                                    <Style TargetType="Path" BasedOn="{StaticResource {x:Type Path}}">
                                        <Setter Property="RenderTransform"
                                                Value="{StaticResource DefaultRotateTransform}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsAutoPublicizeOn}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard x:Name="AutoSpin">
                                                        <Storyboard RepeatBehavior="Forever"
                                                                    Timeline.DesiredFrameRate="15">
                                                            <DoubleAnimation
                                                                Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                                                From="0" To="359.9"
                                                                Duration="0:0:2" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <StopStoryboard BeginStoryboardName="AutoSpin" />
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                        </Button>
                        <Line Stroke="#2fff" X1="0" Y1="0" X2="0"
                              Y2="{Binding ElementName=PublicizeGrid, Path=ActualHeight}"
                              Height="Auto" StrokeThickness="1" VerticalAlignment="Stretch" Grid.Column="1"
                              HorizontalAlignment="Left" IsHitTestVisible="False" />

                        <Border Background="#6fff" CornerRadius="3 0 0 3" HorizontalAlignment="Left" Margin=" 0"
                                IsHitTestVisible="False" Grid.ColumnSpan="1" Opacity="1" Height="3"
                                VerticalAlignment="Bottom">
                            <FrameworkElement Width="{Binding ElementName=PublicizeBtn, Path=ActualWidth}"
                                              x:Name="PublicizeBarGovernor">
                                <FrameworkElement.LayoutTransform>
                                    <ScaleTransform ScaleX="0" />
                                </FrameworkElement.LayoutTransform>
                            </FrameworkElement>
                        </Border>
                    </Grid>
                    <UniformGrid.LayoutTransform>
                        <ScaleTransform ScaleY="1" />
                    </UniformGrid.LayoutTransform>
                </UniformGrid>
            </Grid>-->
        </Grid>
    </Grid>
</windows:TccWindow>